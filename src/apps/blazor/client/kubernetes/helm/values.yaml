# Default values for maxiar-security.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

ktcwebingress:
  name: "ktc-operian-web-ingress"

image:
  repository: ghcr.io/maxiar/blazor
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: 
  name: artifactorycredentialsinfra
nameOverride: ""
fullnameOverride: ""
appRoleKapsch: frontend

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

#podAnnotations: {}
  

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  grafana:
    enabled: false
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 10m
    memory: 16Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmaps:
  frontend:
    domainName: "dummy2.domain"
    ingressDomainName: "dummy3.ingress"
    subdomainName: "blazor"
    domainNameCharSeparator: "."
    proyi18n: ""
  services:
    grafana:
      host: grafana.monitoring.svc.cluster.local
      port: "3000"

logging:
  enabled: false
  elkStack:
    version: 7.16.1
